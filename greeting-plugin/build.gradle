plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

dependencies {
    // Use JUnit test framework for unit tests
    implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testImplementation 'junit:junit:4.13'
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'com.example.greeting'
            implementationClass = 'com.example.plugin.GreetingPlugin'
        }
    }
}

// Add a source set and a task for a functional test suite
def functionalTest = sourceSets.create('functionalTest')
gradlePlugin.testSourceSets(functionalTest)

configurations[functionalTest.implementationConfigurationName].extendsFrom(configurations.testImplementation)

def functionalTestTask = tasks.register('functionalTest', Test) {
    testClassesDirs = functionalTest.output.classesDirs
    classpath = configurations[functionalTest.runtimeClasspathConfigurationName] + functionalTest.output
}

tasks.check.configure {
    // Run the functional tests as part of `check`
    dependsOn(functionalTestTask)
}
